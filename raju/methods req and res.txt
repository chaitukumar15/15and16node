req.method:

Type: String
Returns the HTTP method used for the request (e.g., GET, POST, PUT, etc.).
req.url:

Type: String
Returns the full URL of the request, including the path and query string.
req.headers:

Type: Object
Contains the headers of the incoming request.
req.on(event, callback):

Type: Method
Allows you to listen for specific events on the request, like data (to handle incoming data) or end (when the request is finished).
req.get(header):

Type: Method
Retrieves the value of a specific request header (e.g., req.get('User-Agent')).
req.param(name):

Type: Method
Retrieves a route or query parameter by name. This is deprecated, so it's recommended to use req.params, req.query, or req.body instead.
req.body (when using middleware like express or other body parsers):

Type: Object/String
Contains the parsed body of the incoming request, typically used for POST/PUT requests.
req.query:

Type: Object
Contains query parameters in the URL (e.g., ?id=123).
req.params:

Type: Object
Contains parameters from the route (e.g., /user/:id).
req.socket:

Type: Object
Provides access to the underlying socket object, including remote IP, etc.




res :

res.write(chunk[, encoding][, callback]):

Type: Method
Sends a chunk of data to the client. This can be used when streaming data in parts (e.g., large files or dynamic content).
res.end([data][, encoding][, callback]):

Type: Method
Ends the response. If any data is provided, it will be sent as the last chunk.
res.statusCode:

Type: Number
Sets the HTTP status code for the response (e.g., 200, 404, etc.).
res.setHeader(name, value):

Type: Method
Sets a specific header for the response. Example: res.setHeader('Content-Type', 'application/json').
res.getHeader(name):

Type: Method
Retrieves the value of a specific response header.
res.removeHeader(name):

Type: Method
Removes a header from the response.
res.writeHead(statusCode[, statusMessage][, headers]):

Type: Method
Sends the HTTP response header. The statusCode (e.g., 200, 404) and optionally, a message (e.g., "OK") and headers.
res.redirect([statusCode], url):

Type: Method
Redirects the request to a different URL with the specified status code (default is 302).
res.json([body]) (typically in Express.js):

Type: Method
Sends a JSON response.
res.send([body]):

Type: Method
Sends a generic response (string, buffer, or JSON).
res.sendStatus(statusCode):

Type: Method
Sends the HTTP response with the given status code and status message.
res.flush() (in some cases):

Type: Method
Flushes any buffered data to the client. This is more commonly used in scenarios where you need to send data incrementally.
res.setTimeout(msecs[, callback]):

Type: Method
Sets a timeout for the response. If no data is sent within this time, it will trigger a timeout.
res.writeContinue():

Type: Method
Sends the "100 Continue" HTTP status code, which is used during the request/response cycle for certain situations (like handling large POST requests).